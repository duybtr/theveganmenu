✔ Look into Google Map API @done(25-02-20 20:34)
   ✘ Is there a restaurant id or business id we can get from Google? @cancelled(25-02-20 20:34)
   ✔ List the restaurants and sort them by distance from my current location @done(25-02-20 20:32)
        ✔ Experiment with Distance Matrix API @done(25-01-27 22:26)
        ✘ How do we pass in multiple destinations? @cancelled(25-02-20 20:32)
            ✘ Distance Matrix API only pick up the 1 address even though we passed in 3 @cancelled(25-02-20 20:32)
                ✘ How to encode multiple addresses properly using the requests library @cancelled(25-02-20 20:32)
        ✔ Create models for Restaurant and Menu Item (Food, Drink and Dessert) @done(25-02-05 17:16)
            ✔ Run makemigrations and start populating restaurant values @done(25-02-05 17:16)
   ✔ Just start populating vegan restaurant addresses and zipcodes @done(25-02-20 20:34)
        ✔ What does the command 'gcloud auth application-default print-access-token' do and how can we get the same access token with the python api? @done(25-02-20 20:34)
        ✔ Make a list of vegan restaurants in Dallas and store their locations (long+lat) @done(25-02-20 20:32)
        ✘ Then use Google Map API to look up the address and calculate the distance between the user's current location and the restaurant @cancelled(25-02-20 20:32)
            ✘ Pass this info to the backend and to the Google Map API to find the restaurants closest to the user's location. @cancelled(25-02-20 20:32)
                ✘ Include name, address, and distance to the user. @cancelled(25-02-20 20:32)
✔ It would be difficult to pull back all the restaurants from the database and all the addresses to the Distance Matrix API. @done(25-02-20 20:33)
    ✔ Then what would be the best way to find the closest restaurants? @done(25-02-20 20:33)
        ✔ Calculate distance using latitude and longitude, and then pull back the closest restaurant @done(25-02-20 20:33)
        ✔ SELECT id, acos(sin(radians(latitude)) * sin(radians(32.9192404)) + cos(radians(latitude)) * cos(radians(32.9192404)) * cos(radians(-96.7751877) - radians(longitude))) * 6371 FROM theveganmenu_restaurant; @done(25-02-03 21:18)
    
✔ Create a local postgres database server @done(25-02-20 20:34)